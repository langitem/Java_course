
public class Projectile {
	
	private double initialVelocity;
	private double launchAngle;
	private double verticalComponent;
	private double horizontalComponent;
	private double travelTime;
	private double distanceTraveled;
	
	private static final int gravity = 10; // gravitational acceleration in meters/sec^2
	
	public Projectile() {
		initialVelocity = 0;
		launchAngle = 0;
	}
	
	public Projectile (double velocity, double angle) {
		if (velocity >= 0) {
			initialVelocity = velocity;
		}
		
		if ((angle >= 0) && (angle <= 90)) {
			launchAngle = angle;
		}
		
	}
	
	public void setInitialVelocity(double velocity) {
		if (velocity > 0) {
			initialVelocity = velocity;
		}
	}
	
	public double getInitialVelocity() {
		return initialVelocity;
	}
	
	public void setLaunchAngle(double angle) {
		if ((angle >= 0) && (angle <= 90)) {
			launchAngle = angle;
		}
	}
	
	public double getLaunchAngle() {
		return launchAngle;
	}
	
	public void setVerticalComponent() {
		verticalComponent = initialVelocity * Math.sin(Math.toRadians(launchAngle));
	}
	
	public double getVerticalComponent() {
		return verticalComponent;
	}
	
	public void setHorizontalComponent() {
		horizontalComponent = initialVelocity * Math.cos(launchAngle);
	}
	
	public void setTravelTime() {
		travelTime = (2 * verticalComponent)/gravity;
	}
	
	public double getTravelTime() {
		return travelTime;
	}
	
	public void setDistanceTraveled() {
		distanceTraveled = horizontalComponent * travelTime;
	}
	
	public double getDistanceTraveled() {
		return distanceTraveled;
	}
	
}
