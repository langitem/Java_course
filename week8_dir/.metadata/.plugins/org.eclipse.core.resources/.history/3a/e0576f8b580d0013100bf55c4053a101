/* OHE campus, Dr. Yanguo Jing, 3rd September 2007, A JSlider example */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
public class SliderDemo extends JPanel implements ChangeListener {
    //Set up animation parameters.
    static final int FPS_MIN = 0;
    static final int FPS_MAX = 9; // changed from 30 to 9
    static final int FPS_INIT = 4; // changed from 15 to 4
    JLabel numberLabel;
    JLabel imageLabel;
    
    private Icon[] icons = {
    		new ImageIcon(getClass().getResource("e21.jpg")),
    		new ImageIcon(getClass().getResource("e30.jpg"))
    		
    };
    
    public SliderDemo() {
        setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
        //Create the label.
        JLabel sliderLabel = new JLabel("Slide control the image", JLabel.CENTER); // changed "number to image"
        sliderLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        
        //Create the slider.
        JSlider slider= new JSlider(JSlider.HORIZONTAL, FPS_MIN, FPS_MAX, FPS_INIT);
        slider.addChangeListener(this);
        
        //Turn on labels at major tick marks.
        slider.setMajorTickSpacing(1); // changed from 10 to 1
        slider.setMinorTickSpacing(1);
        slider.setPaintTicks(true);
        slider.setPaintLabels(true);
        slider.setBorder(BorderFactory.createEmptyBorder(0,0,10,0));
        Font font = new Font("Serif", Font.ITALIC, 15);
        slider.setFont(font);
        
        // Create the label that displays the image
        imageLabel = new JLabel();
        imageLabel.setHorizontalAlignment(JLabel.CENTER);
        imageLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        imageLabel.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLoweredBevelBorder(),
                BorderFactory.createEmptyBorder(10,10,10,10)));
        updateImage((int)slider.getValue());
        
        
        //Create the label that displays the number.
        numberLabel = new JLabel();
        numberLabel.setHorizontalAlignment(JLabel.CENTER);
        numberLabel.setAlignmentX(Component.CENTER_ALIGNMENT);
        numberLabel.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLoweredBevelBorder(),
                BorderFactory.createEmptyBorder(10,10,10,10)));
        updateNumber((int)slider.getValue());
        
        //Put everything together.
        add(sliderLabel);
        add(slider);
        add(numberLabel);
        setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
    }
    /** Listen to the slider. */
    public void stateChanged(ChangeEvent e) {
        JSlider source = (JSlider)e.getSource();
        if (!source.getValueIsAdjusting()) {
            updateNumber((int)source.getValue());
            //updateImage((int)source.getValue());
        }
    }
    
    /*
     * Method to replace updateNumber method and used to
     * Update the image displaying in the label
     */
    protected void updateImage(int frameNum) {
    	//Get the number
    	if (frameNum == 0) {
    		System.out.println("0");
    		imageLabel.setIcon(icons[0]);
    	} else if (frameNum == 1) {
    		System.out.print("1");
    		imageLabel.setIcon(icons[1]);
    	}
    	
    }
    
    // Update the Number displaying in the label
    protected void updateNumber(int frameNum) {
        //Get the number
         numberLabel.setText(frameNum+"");
    }
    
    // Create the GUI and show it. For thread safety, this method
    // should be invoked from the event-dispatching thread.
    private static void createAndShowGUI() {
        //Create and set up the window.
        JFrame frame = new JFrame("SliderDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        SliderDemo demo1 = new SliderDemo();
        //Add content to the window.
        frame.add(demo1, BorderLayout.CENTER);
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
    
    public static void main(String[] args) {
    /* Turn off metal's use of bold fonts */
        UIManager.put("swing.boldMetal", Boolean.FALSE);
    //Schedule a job for the event-dispatching thread, creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
}